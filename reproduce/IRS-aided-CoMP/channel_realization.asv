function [H] = channel_realization(p)

% H.bs1_ue1 : H1
% H.bs2_ue1 : H2
% H.bs1_IRS : G1
% H.bs2_IRS : G1
% H.IRS_ue1 : Hr
if p.simulation_scenario == 'single cell-edge user'
    
    L_loss_bs1_ue1 = (p.L0_dB+10*log((norm(p.BS_1_location-p.cell_edge_user_1_location)/p.d0)^(-p.alpha_bu))/log(10);
    L_loss_bs2_ue1 = p.L0_dB+10*log((norm(p.BS_2_location-p.cell_edge_user_1_location)/p.d0)^(-p.alpha_bu))/log(10);
    L_loss_bs1_IRS = p.L0_dB+10*log((norm(p.BS_1_location-p.IRS_location)/p.d0)^(-p.alpha_br))/log(10);
    L_loss_bs2_IRS = p.L0_dB+10*log((norm(p.BS_2_location-p.IRS_location)/p.d0)^(-p.alpha_br))/log(10); 
    L_loss_IRS_ue1 = p.L0_dB+10*log((norm(p.IRS_location-p.cell_edge_user_1_location)/p.d0)^(-p.alpha_ru))/log(10);
    
    % Rayleigh
    H.bs1_ue1 = (randn(p.N_r,p.N_t)+j*randn(p.N_r,p.N_t))/sqrt(2);
    % Rayleigh
    H.bs2_ue1 = (randn(p.N_r,p.N_t)+j*randn(p.N_r,p.N_t))/sqrt(2);
    % Rician
    temp_bs1_IRS = (randn(p.M,p.N_t)+j*randn(p.M,p.N_t))/sqrt(2);
    H.bs1_IRS =  sqrt(p.Rician_f.*abs(temp_bs1_IRS).^2) + temp_bs1_IRS;
    % Rician
    temp_bs2_IRS = (randn(p.M,p.N_t)+j*randn(p.M,p.N_t))/sqrt(2);
    H.bs2_IRS = sqrt(p.Rician_f.*abs(temp_bs2_IRS).^2) + temp_bs2_IRS;
    % Rician
    temp_IRS_ue1 = (randn(p.N_r,p.M)+j*randn(p.N_r,p.M))/sqrt(2);
    H.IRS_ue1 = sqrt(p.Rician_f.*abs(temp_IRS_ue1).^2) + temp_IRS_ue1;

end

